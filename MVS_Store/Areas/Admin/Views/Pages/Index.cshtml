@model IEnumerable<MVS_Store.Models.ViewModels.Pages.PageViewModel>

@{
    ViewBag.Title = "Pages";
}

<h2>Pages</h2>

@if (TempData["SM"] != null)
{
    <div class="alert alert-success">
        @TempData["SM"]
    </div>
}

<a>
    @Html.ActionLink("Create New Page", "AddPage", "", new { @class = "btn btn-success" })
</a>

@if (!Model.Any())
{
    <h1 class="text-center">There Are No Pages</h1>
}
else
{
    <table class="table sorting" id="pages">
        <tr class="home">
            <th>
                Title
            </th>
            <th>
                Slug
            </th>
            <th>
                Sidebar
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr id="id_@item.ID" class="@item.Slug">
                <td>
                    @if (item.Slug != "home")
                    {
                        <span class="ui-icon ui-icon-arrowthick-2-n-s"></span>
                    }
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Slug)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HasSidebar)
                </td>
                <td>
                    @Html.ActionLink("Edit", "EditPage", new { id = item.ID }) |
                    @Html.ActionLink("Details", "PageDetails", new { id = item.ID })
                    <!--Якщо Slug дорівнює home, то не виводити кнопку Delete-->
                    @if (item.Slug != "home")
                    {
                        string slash = "| ";
                        @slash;
                        @Html.ActionLink("Delete", "DeletePage", new { id = item.ID }, new { @class = "delete" })
                    }
                </td>
            </tr>
        }
    </table>
}

@section Scripts
{
    <script src="~/Content/ShopJS/PagesIndexViewJS.js"></script>
}